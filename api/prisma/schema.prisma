generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model coffee_stocks {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id   String    @db.Uuid
  coffee_id String    @db.Uuid
  amount    Int?
  place     String?
  memo      String?
  create_at DateTime? @default(dbgenerated("'2022-01-19 11:49:34.124324'::timestamp without time zone")) @db.Timestamp(6)
  coffees   coffees   @relation(fields: [coffee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model coffees {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?         @db.Uuid
  name          String?
  memo          String?
  create_at     DateTime?       @default(dbgenerated("'2022-01-19 11:49:34.084189'::timestamp without time zone")) @db.Timestamp(6)
  users         users?          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  coffee_stocks coffee_stocks[]
}

model users {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nickname        String?
  email           String?
  coffee_stocks   coffee_stocks[]
  coffees         coffees[]
  user_securities user_securities?
}

model user_securities {
  user_id  String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  password String?
  users    users   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
